
=(('tag:small'))PHPのレガシーコードを\nRubyで焼き変えてみた

: author
	(('tag:small'))@akira345

: institution
	(('tag:small'))Hiroshima.rb

: theme
    rabbit

: allotted-time
   15m

= 自己紹介
*(('tag:small'))本業：精神修行
*(('tag:small'))所属：
	*(('tag:x-small'))Hiroshima.rb
	*(('tag:x-small'))広島サーバユーザ友の会（仮）
	*(('tag:x-small'))広島電子工作娯楽部（仮称）
	*(('tag:x-small'))WindowsPhoneハンズオンin広島
	*(('tag:x-small'))オープンセミナー2014@広島　実行メンバー
	*(('tag:x-small'))OSC広島実行メンバー
	*(('tag:x-small'))WTM時々インフラ担当


= 本題
\n
*目的：
非オブジェクト指向なレガシーコードを\n
((*（出来る範囲で）*))オブジェクト指向的に持っていく。\n
出来れば((*テスト*))も入れたい。

= 生け贄の準備
*(('tag:small'))今回の生け贄：
	*((*十数年前*))に((*独学で*))習得中に自作した15Puzzleプログラム
(('note:https://github.com/akira345/Old_PHP_Samples/tree/master/15puzzle_old'))
\n
(('tag:x-small'))（以前Rubyでゲームを作られた方がいたので対抗してみた）

= 15Puzzle??
  # image
  # src=15puzzle.png
#   # normalized_width =  50
#  # relative_width = 100
  # relative_height = 100

= 15Puzzle??
  # image
  # src=15-puzzle.png
#   # normalized_width =  50
#  # relative_width = 100
  # relative_height = 100

= レガシーな点
	*(('tag:x-small'))圧倒的に((*古い！*))（iniファイルなんてものがあったり）
	*(('tag:x-small'))php4の出たての頃に書かれている
	*(('tag:x-small'))作った本人が((*実はよく分かっていない*))
	*(('tag:x-small'))山のような((*フラグ管理*))。よくわからない((*変数*))、((*強引な処理*))
	*(('tag:x-small'))((*変数一覧表*))なるものがあるｗ
	*(('tag:x-small'))当然MVCなんて考えは((*ない*))
	*(('tag:x-small'))当時のポリシーとして、HTMLを極力PHPで出力しているので((*作りがカオス*))
	*(('tag:x-small'))当時自信作今黒歴史


= 第１段階
*(('tag:x-small'))いきなりRubyにするのはさすがに無理なので、まずはPHPで試作。
	*(('tag:x-small'))とはいえ、再設計すると、新規で作り直ｓ(ry
*(('tag:x-small'))当時の自分を((*恨みつつ*))、まずは簡単な((*ビューとロジックの分離*))から。
	*(('tag:x-small'))この時、((*無理にファイルを分離*))しようとすると色々悩むので、まずは((*同一ファイル内で*))、分離すると良い。
*(('tag:x-small'))ビューに埋め込んだロジックは((*なるべく分離。*))
	*(('tag:x-small'))但し、この時は((*ロジックを余り弄らない*))こと。テストが無いので((*バグると酷い目に合う*))
#*(('tag:x-small'))ある程度分離できて、動作に問題がなければ、ファイルを分離する

= 第２段階
*(('tag:x-small'))ロジックの組換前に、((*機能ブロック*))を大まかに洗い出しておく。
*(('tag:x-small'))ロジック部分から、((*機能ブロック*))をくくりだし、((*クラスメソッドとして纏める*))所からまずはスタート。
*(('tag:x-small'))関数化されている箇所は((*そのままクラスメソッドとして仮実装*))。
*(('tag:x-small'))クラスメソッドはとりあえず((*全てPublic！*))
*(('tag:x-small'))テストコードが無いので、ロジックの組み換えは後。((*動く状態を極力キープ*))

= 機能ブロック
*(('tag:small'))このプログラムを構成する主な機能
	*(('tag:small'))乱数生成
	*(('tag:small'))動かす数字を格納する配列を生成
	*(('tag:small'))数字が動かせるか判定する
	*(('tag:small'))数字を動かす
	*(('tag:small'))パズルが完成したかチェックする


= ロジックに手をつける
*(('tag:x-small'))フローチャートを書くのは((*断念した*))Orz
*(('tag:x-small'))基本は機能ロジックごとにカットアンドペーストでクラスメソッド化や、ロジックの組み換えを行った。
*(('tag:x-small'))機能ブロックを動かす場合、該当箇所を全てコメントアウトし、最低限の実装に置換。動作確認しながら、ブロックの組み換えを行った。
*(('tag:x-small'))複雑怪奇なifのネストは、中のロジックをprint('A')のようなものに書き換えて、動作の確認をしながら整理
*(('tag:x-small'))変数名やフラグを少し整理。(fとかswとかrとか）


= セッション周り
*(('tag:small'))昔はセッション変数に何でも突っ込んでいた
*(('tag:small'))オブジェクト指向になると、クラスにデータを持たせられるので、クラスをセッションに突っ込めばOK（時と場合による）


= 完成
\n\n\n
(('tag:center'))https://github.com/akira345/15Puzzle_For_OOP
\n\n\n
(('note:ただしPHP版'))

= さて、((*Ruby*))に焼き変えるか。

*(('tag:small'))PHPをRubyに置き換えるので((*楽勝！*))（と思っていました）
*(('tag:small'))いまさらCGIクラスなんて使うと((*レガシーに戻る。*))\nかといって、この程度でRailsも((*大げさ*))
	*(('tag:small'))((*Sinatraを使おう。*))
(('note:http://www.sinatrarb.com/intro-jp.html'))


= sinatraではまる！
*(('tag:small'))あれ？((*画像でないぞ？？*))
	*(('tag:small'))publicディレクトリが必要
*(('tag:small'))あれ？セッションに入れた((*クラスが読めないぞ？*))
	*(('tag:small'))enable :sessionsが必要
*(('tag:small'))get/postで((*ロジック分離*))しないといけないぞ？
	*(('tag:small'))とりあえず共通関数作成で回避((*<-邪道*))
*(('tag:small'))などなど

= ひむひむヘルプ！
*(('tag:small'))絶賛((*仕事中*))のひむひむへ((*襲撃!!*))
	*(('tag:x-small'))インデントがカオス！
	*(('tag:x-small'))status=3って何？
	*(('tag:x-small'))このメソッド名、スペル違うよ・・・
	*(('tag:x-small'))変数の初期化はどこでされているの？
	*(('tag:x-small'))ロジックが難しい。データの持たせ方が・・
	*(('tag:x-small'))テストはどこ？
	*(('tag:x-small'))やりたい事は何となく分かるけど・・う〜ん（悩）
= 　
\n\n
((*教訓：コードレビューは大事。*))

= 　
\n\n
((*教訓：コードレビューは大事。*))
\n
*(('tag:x-small'))大事な事なので(ry

= リファクタリングだ！
*(('tag:x-small'))クラスのテストを((*Rspec*))で。
	*(('tag:x-small'))だけど、ランダムにデータができるので、余りテストが書けなかった・・
*(('tag:x-small'))ビューのテストが((*非常に難儀*))
	*(('tag:x-small'))sinatraでは、途中でprintとか出力しても((*無視される*))ので、printデバックができない。
	*(('tag:x-small'))((*pry*))をつかって、ブレークポイントを仕掛けてデバック
	*(('note:http://shirusu-ni-tarazu.hatenablog.jp/entry/2012/06/24/051114'))


= そんなこんなで
\n\n
((*完成！（デモするよ）*))
\n
	*(('note:https://github.com/akira345/15Puzzle_For_Ruby'))






